openapi: 3.0.3
info:
  title: Pet Sitter API
  version: "0.1"
tags:
  - name: Users
    description: Operations related to users
  - name: Jobs
    description: Operations related to jobs
paths:
  /users:
    post:
      summary: Create a new user
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          headers:
            Location:
              schema:
                type: string
  /users/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get user by ID
      operationId: viewUserWithId
      tags:
        - Users
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update user by ID
      operationId: modifyUserWithId
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete user by ID
      operationId: deleteUserWithId
      tags:
        - Users
      responses:
        '204':
          description: User deleted successfully
  /users/{id}/jobs:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get jobs created by user
      operationId: listJobsForUser
      tags:
        - Users
      responses:
        '200':
          description: List of jobs created by user
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
  /users/{id}/job-applications:
    parameters:
      - name: id 
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get job applications made by user
      operationId: listJobApplicationsForUser
      tags:
        - Users
      responses:
        '200':
          description: List of job applications made by user
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobApplication'
              examples:
                two-items:
                  summary: Example with two job applications
                  value:
                    items:
                      - id: 1
                        job_id: 123
                        user_id: 345
                        status: PENDING
                      - id: 2
                        job_id: 123
                        user_id: 456
                        status: COMPLETE
                empty:
                  summary: Example with no job applications
                  value:
                    items: []
                many:
                  summary: Example with many job applications
                  value:
                    items:
                      - id: 1
                        job_id: 123
                        user_id: 345
                        status: COMPLETE
                      - id: 2
                        job_id: 123
                        user_id: 456
                        status: PENDING
                      - id: 3
                        job_id: 123
                        user_id: 567
                        status: PENDING
                      - id: 4
                        job_id: 123
                        user_id: 678
                        status: PENDING
                      - id: 5
                        job_id: 123
                        user_id: 789
                        status: COMPLETE
                      - id: 6
                        job_id: 123
                        user_id: 890
                        status: PENDING
                      - id: 7
                        job_id: 123
                        user_id: 901
                        status: COMPLETE
                      - id: 8
                        job_id: 123
                        user_id: 234
                        status: PENDING
                      - id: 9
                        job_id: 123
                        user_id: 345
                        status: COMPLETE
                      - id: 10
                        job_id: 123
                        user_id: 456
                        status: PENDING
                      - id: 11
                        job_id: 123
                        user_id: 567
                        status: COMPLETE
  /jobs:
    post:
      summary: Create a new job
      operationId: createJob
      tags:
        - Jobs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          description: Job created successfully
          headers:
            Location:
              schema:
                type: string
    get:
      summary: Get all jobs
      operationId: listAllJobs
      tags:
        - Jobs
      responses:
        '200':
          description: List of jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
              examples:
                with-some-data:
                  summary: Example with some data
                  value:
                    items:
                      - id: 123
                        creator_user_id: 345
                        start_time: 2023-10-01T10:00:00Z
                        end_time: 2023-10-01T12:00:00Z
                        activity: walk
                        dog:
                          name: Fido
                          size: medium
                          breed: Doberman
                          age: 3
                      - id: 234
                        creator_user_id: 456
                        start_time: 2023-10-02T14:00:00Z
                        end_time: 2023-10-02T16:00:00Z
                        activity: feeding
                        dog:
                          name: Max
                          size: small
                          breed: Beagle
                          age: 5
                      - id: 345
                        creator_user_id: 567
                        start_time: 2023-10-03T08:00:00Z
                        end_time: 2023-10-03T10:00:00Z
                        activity: grooming
                        dog:
                          name: Bella
                          size: large
                          breed: Labrador
                          age: 2
  /jobs/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get job by ID
      operationId: viewJobWithId
      tags:
        - Jobs
      responses:
        '200':
          description: Job found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    put:
      summary: Update job by ID
      operationId: modifyJobWithId
      tags:
        - Jobs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: Job updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    delete:
      summary: Delete job by ID
      operationId: deleteJobWithId
      tags:
        - Jobs
      responses:
        '204':
          description: Job deleted successfully
  /jobs/{id}/job-applications:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get all job applications for a job
      operationId: viewApplicationsForJob
      tags:
        - Jobs
      responses:
        '200':
          description: List of job applications for the job
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobApplication'
              examples:
                two-items:
                  summary: Example with two job applications
                  value:
                    items:
                      - id: 1
                        job_id: 123
                        user_id: 345
                        status: PENDING
                      - id: 2
                        job_id: 123
                        user_id: 456
                        status: COMPLETE
                empty:
                  summary: Example with no job applications
                  value:
                    items: []
                many:
                  summary: Example with many job applications
                  value:
                    items:
                      - id: 1
                        job_id: 123
                        user_id: 345
                        status: COMPLETE
                      - id: 2
                        job_id: 123
                        user_id: 456
                        status: PENDING
                      - id: 3
                        job_id: 123
                        user_id: 567
                        status: PENDING
                      - id: 4
                        job_id: 123
                        user_id: 678
                        status: PENDING
                      - id: 5
                        job_id: 123
                        user_id: 789
                        status: COMPLETE
                      - id: 6
                        job_id: 123
                        user_id: 890
                        status: PENDING
                      - id: 7
                        job_id: 123
                        user_id: 901
                        status: COMPLETE
                      - id: 8
                        job_id: 123
                        user_id: 234
                        status: PENDING
                      - id: 9
                        job_id: 123
                        user_id: 345
                        status: COMPLETE
                      - id: 10
                        job_id: 123
                        user_id: 456
                        status: PENDING
                      - id: 11
                        job_id: 123
                        user_id: 567
                        status: COMPLETE
    put:
      summary: Update job application status
      operationId: modifyJobApplicationWithId
      tags:
        - Jobs
      requestBody:
        description: Update the status of a job application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
      responses:
        '200':
          description: Job application status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
    post:
      summary: Create a new job application
      operationId: createJobApplication
      tags:
        - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
      responses:
        '201':
          description: Job application created successfully
          headers:
            Location:
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
        full_name:
          type: string
        roles:
          type: array
          items:
            type: string
    Job:
      type: object
      properties:
        id:
          type: string
        creator_user_id:
          type: string
        start_time:
          type: string
        end_time:
          type: string
        activity:
          type: string
        dog:
          $ref: '#/components/schemas/Dog'
    Dog:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
        breed:
          type: string
        age:
          type: integer
    JobApplication:
      type: object
      properties:
        id:
          type: string
        job_id:
          type: string
        user_id:
          type: string
        status:
          type: string